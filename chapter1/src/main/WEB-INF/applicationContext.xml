<?xml version="1.0" encoding="UTF-8"?>
<!--引用spring的多个schema空间的格式定义文件？？？？？？-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
    <!--扫描类包，将标注spring注解的类自动转化Bean，同时完成Bean的注入  才能使用@Repository和@@Autowired-->
    <context:component-scan base-package="com.smart.dao"/>
    <!--扫描service类包-->
    <context:component-scan base-package="com.smart.service"/>

    <!--定义一个使用DBCP实现的数据源？？？？？-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 高版本驱动代替-->
    <!--destroy-method="close"-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/sampledb"
          p:username="root"
          p:password="112112zcf"/>

    <!--定义JDBC模板Bean？？？？--><!--上处将dataSource注入JdbcTemp，这个将JdbcTemp...Bean将通过@Autowired注入LoginLog和UserDao的Bean中-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/><!--看上一个Bean-->


    <!--配置事务管理器    目的？？？？？？-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!--通过Aop配置提供事物增强，让service包下所有Bean所有方法拥有事务？？？？？？？？以下，不知所云。。。。-->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod" expression="execution(* com.smart.service..*(..))"/>
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
</beans>